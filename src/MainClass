import lejos.hardware.Button;
import lejos.utility.Delay;
import action.MouvementRobot;
import perception.ColorSensor;
import perception.boutonConsole;
import lejos.hardware.sensor.EV3UltrasonicSensor;
import lejos.hardware.port.SensorPort;
import lejos.robotics.SampleProvider;

public class MainClass {
    private MouvementRobot mouvementRobot;
    private ColorSensor colorSensor;
    private boutonConsole boutonConsole;
    private EV3UltrasonicSensor ultrasonicSensor;
    private static final double SAFE_DISTANCE = 0.2; 

    public MainClass() {
        mouvementRobot = new MouvementRobot();
        colorSensor = new ColorSensor();
        boutonConsole = new boutonConsole();
        ultrasonicSensor = new EV3UltrasonicSensor(SensorPort.S1); 
    }

    public void start() {
        System.out.println("wait...");
        boutonConsole.positionRobot();
        
        while (Button.ESCAPE.isUp()) {
            
            if (takePallet()) {
               
                goToWhiteLineAndDrop();
               
                searchAndCollectNextPallet();
            }
        }
        System.out.println("stop");
        cleanup();
    }

    private boolean takePallet() {
        return mouvementRobot.obtenirPilot().recupererPalet();
    }

    private void goToWhiteLineAndDrop() {
        mouvementRobot.avancerDe(50); 
        if (detectObstacle()) {
            mouvementRobot.reculerDe(10); 
        }
        mouvementRobot.retourInitial(); 
        mouvementRobot.lacherPalet(); 
    }

    private void searchAndCollectNextPallet() {
        mouvementRobot.avancerContinu();
       
        while (!detectWhiteLine() && !takePallet()) {
            if (detectObstacle()) {
                mouvementRobot.arretImmediat();
                mouvementRobot.pivoterDroite(45); 
            }
            Delay.msDelay(100);
        }
    }

    private boolean detectWhiteLine() {
        return colorSensor.detectWhiteLine(); 
    }

    private boolean detectObstacle() {
        SampleProvider distance = ultrasonicSensor.getDistanceMode();
        float[] sample = new float[distance.sampleSize()];
        distance.fetchSample(sample, 0);
        return sample[0] < SAFE_DISTANCE;
    }

    private void cleanup() {
        mouvementRobot.arretImmediat();
        ultrasonicSensor.close();
        colorSensor.close();
    }

    public static void main(String[] args) {
        MainClass robot = new MainClass();
        robot.start();
    }
}
