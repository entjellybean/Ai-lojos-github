import lejos.hardware.Button;
import lejos.utility.Delay;
import action.Deplacement;
import perception.ColorSensor;
import perception.boutonConsole;
import lejos.hardware.sensor.EV3UltrasonicSensor;
import lejos.hardware.port.SensorPort;
import lejos.robotics.SampleProvider;

public class MainClass {
    private Deplacement mouvementRobot;
    private ColorSensor colorSensor;
    private boutonConsole boutonConsole;
    private EV3UltrasonicSensor ultrasonicSensor;
    private static final double SAFE_DISTANCE = 0.2; 
    private boolean isFirstPalletPicked = false;

    public MainClass() {
        mouvementRobot = new Deplacement();
        colorSensor = new ColorSensor();
        boutonConsole = new boutonConsole();
        ultrasonicSensor = new EV3UltrasonicSensor(SensorPort.S1); 
    }

    public void start() {
        System.out.println("wait...");
        boutonConsole.positionRobot();
        
        while (Button.ESCAPE.isUp()) {
            if (!isFirstPalletPicked) {
                avancerVers1erPalet(mouvementRobot);
                if (takePallet()) {
                    goToWhiteLineAndDrop();
                    isFirstPalletPicked = true;
                }
            } else { //ajouter un if pour le 2nd palet
                
                goToSecondPalletAndPick();
                
                searchAndCollectNextPallet();
            }
        }
        System.out.println("stop.");
        cleanup();
    }

    private boolean takePallet() {
        return mouvementRobot.obtenirPilot().recupererPalet();
    }

    private void goToWhiteLineAndDrop() { // ajouter while
        mouvementRobot.avancerDe(50); 
        if (detectObstacle()) { 
            mouvementRobot.reculerDe(10); //réfléchir à l'action
        }
        mouvementRobot.retourInitial(); //enlever
        mouvementRobot.lacherPalet(); 
    }

    private void goToSecondPalletAndPick() { // ajouter while
        
        mouvementRobot.avancerDe(30); 
        if (!detectObstacle()) {
            takePallet(); 
        }
    }

    private void searchAndCollectNextPallet() { // à vérifier plus tard
        mouvementRobot.avancerContinu();
        
        while (!detectWhiteLine() && !takePallet()) {
            if (detectObstacle()) {
                mouvementRobot.arretImmediat();
                mouvementRobot.pivoterDroite(45); 
            }
            Delay.msDelay(100);
        }
    }

    private boolean detectWhiteLine() {
        return colorSensor.detectWhiteLine(); 
    }

    private boolean detectObstacle() { // tester la classe + changer la méthode pour avoir la distance en face
        SampleProvider distance = ultrasonicSensor.getDistanceMode();
        float[] sample = new float[distance.sampleSize()];
        distance.fetchSample(sample, 0);
        return sample[0] < SAFE_DISTANCE;
    }

    private void cleanup() {
        mouvementRobot.arretImmediat();
        ultrasonicSensor.close();
        colorSensor.close();
    }

    public static void main(String[] args) {
        MainClass robot = new MainClass();
        robot.start();
    }
}
